* Use the 2012 GSS data
clear all
use "GSS2012.dta"

// create some variables that we want to use
recode partyid (0/1 = 1)(5/6 = 2)(nonm = 3), gen(party3)
lab def PARTY 1 "Dem" 2 "GOP" 3 "Other"
label val party3 PARTY
gen ineqact = 8 - eqwlth

tw (lfit ineq educ if party3 == 1)(lfit ineq educ if party3 == 2)(lfit ineq educ if party3 == 3)

// summarize the mean of one variable by categories of another
tab party3, sum(ineq)
tabstat ineqact, by(party3) stats(mean sd p25 p75)

// ttest
ttest ineq, by(sex)

// what about comparing people in different parties. We could make binary variables.
recode party3 (2/3 = 0), gen(party_dem)
recode party3 (1 3 = 0)(2 = 1), gen(party_gop)
recode party3 (1 2 = 0)(3 = 1), gen(party_other)

tab party3, gen(party_) // a faster way

ttest ineq, by(party_dem)

// regression
regress ineq sex educ age
regress ineq sex educ age party3 // BAD!!!!!
regress ineq sex educ age party_dem party_other // technically correct
regress ineq sex educ age party_* // same
regress ineq sex educ age i.party3 // best
regress ineq sex educ age ib2.party3 // choose your baseline

// you could make your own intereaction terms
gen educXdem = educ * party_dem
gen educXgop = educ * party_gop
gen educXother = educ * party_other
regress ineq sex age educ ib1.party3 educXgop educXother

regress ineq sex age c.educ##i.party3 // but you should should let stata do it for you.

// margins
margins party3
margins party3, at(educ = (12(4)20))
marginsplot

// more examples
regress ineq sex c.age##c.age c.educ##i.party3
margins party3
margins party3, atmean
regress ineq sex c.age##c.age c.educ##i.party3 realinc
gen lninc = log(realinc)
regress ineq sex c.age##c.age c.educ##i.party3 lninc
xtile inc5 = realinc, nq(5) // make income quintiles
tab inc5, sum(realinc)
regress ineq sex age educ i.party3##i.inc5
margins party3##inc5
marginsplot, xdim(inc5)
margins, at(party3 = (1(1)3) inc5 = (1(1)5)) atmeans
marginsplot, xdim(inc5) scheme(s1mono) noci

// regession tables
regress ineq i.party3 if finalsample == 1
estimates store BASE
est replay BASE
regress ineq i.party3 educ age sex if finalsample == 1
est store ALL
regress ineq i.party3##c.educ age sex 
est store INT

// make our sample the same across all the regression
// also known as listwise deletion
est restore INT
generate finalsample = e(sample)
tab finalsample

estimates table BASE ALL INT

findit estpost
help estpost

esttab BASE ALL INT
esttab _all, nobase order(2.party3 3.party3 educ 2.party3#c.educ 3.party3#c.educ age sex)

esttab _all, nobase order(2.party3 3.party3 educ 2.party3#c.educ 3.party3#c.educ age sex) ///
	nonumbers mtitle("Model 1" "Model 2" "Model 3") not

esttab _all, nobase order(2.party3 3.party3 educ 2.party3#c.educ 3.party3#c.educ age sex) ///
	nonumbers mtitle("Model 1" "Model 2" "Model 3") not ///
	coeflabel(2.party3 "GOP" 3.party3 "Other" educ "education" ///
	2.party3#c.educ "GOP X educ" 3.party3#c.educ "Other X educ")

// export to rtf
esttab _all using mytable.rtf, nobase order(2.party3 3.party3 educ 2.party3#c.educ 3.party3#c.educ age sex) ///
	nonumbers mtitle("Model 1" "Model 2" "Model 3") not ///
	coeflabel(2.party3 "GOP" 3.party3 "Other" educ "education" ///
	2.party3#c.educ "GOP X educ" 3.party3#c.educ "Other X educ")
	
// export to csv
esttab _all using mytable.csv, nobase order(2.party3 3.party3 educ 2.party3#c.educ 3.party3#c.educ age sex) ///
	nonumbers mtitle("Model 1" "Model 2" "Model 3") not ///
	coeflabel(2.party3 "GOP" 3.party3 "Other" educ "education" ///
	2.party3#c.educ "GOP X educ" 3.party3#c.educ "Other X educ")
